[{"title":"HTML5五大特性","date":"2017-04-18T06:00:16.000Z","path":"2017/04/18/HTML5五大特性/","text":"HTML5技术中有这样5个特性，它们能够让你实现事半功倍的开发效果，它们分别是：DNS Prefetching、Link Prefetching、Download属性、Regular Expressions以及Datalist元素。 1. DNS Prefetching DNS Prefetching特性允许开发者手动控制，告诉浏览器需要解析哪个域名。代码如下：1&lt;link rel=\"dns-prefetch\" href=\"//fonts.googleapis.com\"&gt; 2. Link Prefetching Link Prefetching特性允许开发者在页面加载的时候预先加载他们希望指定的页面或元素。代码如下：12&lt;link rel=\"prefetch\" href=\"http://daker.me/2013/05/hello-world.html\" /&gt;&lt;link rel=\"prefetch\" href=\"http://daker.me/assets/images/avatar.png\" /&gt; 你也能够使用prerendering特性令你的网站速度更快，浏览器能够在后台获取并渲染整个页面，用户点击相应链接时再为用户展示该页面。代码如下：1&lt;link rel=\"prerender\" href=\"http://daker.me/2013/05/hello-world.html\" /&gt; 3. Download属性 凭借HTML5的Download属性，开发者可以不必到特定页面下载文件，而是直接进行下载。这一操作不必依赖服务器端代码便能够执行。代码如下：1&lt;a href=\"download_pdf.php?id=15\" download=\"myfile.pdf\"&gt;Download PDF&lt;/a&gt; 4. Regular Expressions一旦用户输入一个有效的email或URL地址，pattern属性可以令你直接使用regular expressions而无需检查JS或服务器端代码。代码如下：1&lt;input type=\"email\" pattern=\"^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]&#123;2,3&#125;)&#123;1,2&#125;)$*\" value=\"\"&gt; 5. Datalist元素若使用jQuery插件执行自动填充输入操作，则用户每敲击一次键盘都要访问服务器端代码以及数据库。但有了Datalist元素，开发者不必再使用jQuery插件便可完成该操作。代码如下：123456789101112&lt;form action=\"form.php\" method=\"post\"&gt; &lt;input list=\"cars\" name=\"cars\" &gt; &lt;datalist id=\"cars\"&gt; &lt;option value=\"Volvo\"&gt; &lt;option value=\"BMW\"&gt; &lt;option value=\"Bugatti\"&gt; &lt;option value=\"Cadillac\"&gt; &lt;option value=\"Chevrolet\"&gt; &lt;option value=\"Chrysler\"&gt; &lt;/datalist&gt; &lt;input type=\"submit\" /&gt; &lt;/form&gt; 文章转载自：http://daker.me/2013/05/5-html5-features-you-need-to-know.html","tags":[]},{"title":"常用正则表达式","date":"2017-04-14T06:11:53.000Z","path":"2017/04/14/常用正则表达式/","text":"收集常用javascript正则表达式 中国手机号1234function checkphone(str)&#123; var reg = /^(?=\\d&#123;11&#125;$)^1(?:3\\d|4[57]|5[^4\\D]|7[^249\\D]|8\\d)\\d&#123;8&#125;$/; return reg.test(str);&#125;; 邮箱1234function checkemail(str)&#123; var reg = /^([a-zA-Z0-9_-])+@([a-zA-Z0-9_-])+((\\.[a-zA-Z0-9_-]&#123;2,3&#125;)&#123;1,2&#125;)$/; return reg.test(str);&#125;; 6~20位数字字母混合密码1234function checkpwd(str)&#123; var reg = /^(?=.*[A-Za-z])(?=.*\\d)[A-Za-z\\d]&#123;6,20&#125;$/; return reg.test(str);&#125;;","tags":[{"name":"javascript","slug":"javascript","permalink":"//thomsontmx.github.io/tags/javascript/"},{"name":"正则表达式","slug":"正则表达式","permalink":"//thomsontmx.github.io/tags/正则表达式/"}]},{"title":"博客开张啦","date":"2017-03-28T06:05:46.000Z","path":"2017/03/28/博客开张啦/","text":"作为一名前端怎么可以没有自己的博客，so！我的博客因此开通啦！","tags":[]}]